apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  # This name uniquely identifies the PVC. Will be used in deployment below.
  name: minio-pv-claim
  labels:
    app: minio-storage-claim
spec:
  # Read more about access modes here: http://kubernetes.io/docs/user-guide/persistent-volumes/#access-modes
  accessModes:
    - ReadWriteOnce
  storageClassName: default
  resources:
    # This is the request for storage. Should be available in the cluster.
    requests:
      storage: 10Gi
---
apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  # This name uniquely identifies the Deployment
  name: minio-deployment
spec:
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        # Label is used as selector in the service.
        app: minio
    spec:
      # Refer to the PVC created earlier
      volumes:
      - name: storage
        persistentVolumeClaim:
          # Name of the PVC created earlier
          claimName: minio-pv-claim
      containers:
      - name: minio
        # Pulls the default Minio image from Docker Hub
        image: minio/minio:latest
        args:
        - server
        - /storage
        - --address
        - ":9000"
        - --console-address
        - ":9001"
        env:
        # Minio access key and secret key
        - name: MINIO_ACCESS_KEY
          value: "minio"
        - name: MINIO_SECRET_KEY
          value: "minio123"
        #- name: MINIO_IDENTITY_LDAP_SERVER_ADDR
        #  value: "openldap-svc.kubedata-openldap.svc.cluster.local:389"
        #- name: MINIO_IDENTITY_LDAP_LOOKUP_BIND_DN
        #  value: "cn=usersync,ou=People,dc=poc,dc=br"
        #- name: MINIO_IDENTITY_LDAP_USER_DN_SEARCH_BASE_DN
        #  value: "ou=People,dc=poc,dc=br"
        #- name: MINIO_IDENTITY_LDAP_USER_DN_SEARCH_FILTER
        #  value: "(&(objectClass=person)(cn=%s))"
        #- name: MINIO_IDENTITY_LDAP_LOOKUP_BIND_PASSWORD
        #  value: "usersync"
        #- name: MINIO_IDENTITY_LDAP_GROUP_SEARCH_FILTER 
        #  value: "(&(objectClass=groupOfNames)(member=%d))"
        #- name: MINIO_IDENTITY_LDAP_GROUP_SEARCH_BASE_DN
        #  value: "ou=People,dc=poc,dc=br"
        #- name: MINIO_IDENTITY_LDAP_TLS_SKIP_VERIFY 
        #  value: "off"
        #- name: MINIO_IDENTITY_LDAP_SERVER_INSECURE 
        #  value: "on"
        #- name: MINIO_IDENTITY_LDAP_SERVER_STARTTLS 
        #  value: "off"
        #- name: MINIO_IDENTITY_LDAP_SRV_RECORD_NAME 
        #  value: ""
      
        ports:
        - containerPort: 9000
          hostPort: 9000
        # Mount the volume into the pod
        volumeMounts:
        - name: storage # must match the volume name, above
          mountPath: "/storage"
---
apiVersion: v1
kind: Service
metadata:
  name: minio-svc
spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
  selector:
    app: minio
---
apiVersion: v1
kind: Service
metadata:
  name: minio-ui-svc
spec:
  type: LoadBalancer
  ports:
    - port: 9001
      targetPort: 9001
      protocol: TCP
  selector:
    app: minio