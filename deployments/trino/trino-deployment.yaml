---
apiVersion: v1
kind: Secret
metadata:
  name: trino-s3-keys
type: Opaque
stringData:
  access-key: minio
  secret-key: minio123
---
apiVersion: v1
kind: Secret
metadata:
  name: regcred
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJkb2NrZXIuYXBwLnNlbWEuZGYuZ292LmJyIjogewoJCQkiYXV0aCI6ICJZV1J0YVc0NlUybHpaR2xoWm1GelpUST0iCgkJfSwKCQkiaHR0cHM6Ly9pbmRleC5kb2NrZXIuaW8vdjEvIjogewoJCQkiYXV0aCI6ICJabUZpYVdGdWIyRTZNamt3TVRrMyIKCQl9Cgl9Cn0K
---
apiVersion: v1
kind: Service
metadata:
  name: trino-svc-sec
spec:
  type: LoadBalancer
  ports:
    - port: 8443
      targetPort: 8443
      protocol: TCP
  selector:
    app: trino-coordinator
---
apiVersion: v1
kind: Service
metadata:
  name: trino-svc
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: trino-coordinator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trino-coordinator
spec:
  selector:
    matchLabels:
      app: trino-coordinator
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: trino-coordinator
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
      - name: trino
        image: fabianoa/trino:426
        command: ["/bin/sh", "-c"]
        args:
          - /root/ranger-trino-plugin/enable-trino-plugin.sh;
            /usr/lib/trino/bin/run-trino;
        ports:
        - containerPort: 8443
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: trino-s3-keys
              key: access-key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: trino-s3-keys
              key: secret-key
        volumeMounts:
        - name: trino-cfg-vol
          mountPath: /etc/trino/config.properties
          subPath: config.properties.coordinator
        - name: trino-cfg-vol
          mountPath: /etc/trino/password-authenticator.properties
          subPath: password-authenticator.properties
        - name: trino-cfg-vol
          mountPath: /etc/trino/password.db
          subPath: password.db
        - name: trino-cfg-vol
          mountPath: /etc/trino/node.properties
          subPath: node.properties
        - name: trino-cfg-vol
          mountPath: /etc/trino/log.properties
          subPath: log.properties
        - name: trino-keystore-vol
          mountPath: /etc/trino/keystore.jks
          subPath: keystore.jks        
        - name: trino-cfg-vol
          mountPath: /etc/trino/catalog/datalake.properties
          subPath: datalake.properties
        - name: trino-cfg-vol
          mountPath: /etc/trino/catalog/mysql.properties
          subPath: mysql.properties
        - name: trino-cfg-vol
          mountPath: /root/ranger-trino-plugin/install.properties
          subPath: install.properties
        #resources:
        #  requests:
        #    memory: "2G"
        #    cpu: 2
        imagePullPolicy: Always
      volumes:
        - name: trino-cfg-vol
          configMap:
            name: trino-configs
        - name: trino-keystore-vol
          configMap:
            name: trino-keystore
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: trino-worker
spec:
  serviceName: trino-worker 
  replicas: 2
  selector:
    matchLabels:
      app: trino-worker
  template:
    metadata:
      labels:
        app: trino-worker
    spec:
      imagePullSecrets:
          - name: regcred
      securityContext:
        fsGroup: 1000
      containers:
      - name: trino
        image: fabianoa/trino:426
        ports:
        - containerPort: 80
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: trino-s3-keys
              key: access-key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: trino-s3-keys
              key: secret-key
        volumeMounts:
        - name: trino-cfg-vol
          mountPath: /etc/trino/config.properties
          subPath: config.properties.worker
        - name: trino-cfg-vol
          mountPath: /etc/trino/node.properties
          subPath: node.properties
        - name: trino-cfg-vol
          mountPath: /etc/trino/catalog/datalake.properties
          subPath: datalake.properties
        - name: trino-cfg-vol
          mountPath: /etc/trino/catalog/mysql.properties
          subPath: mysql.
        - name: trino-keystore-vol 
          mountPath: /etc/trino/keystore.jks
          subPath: keystore.jks
        - name: trino-cfg-vol
          mountPath: /root/ranger-trino-plugin/install.properties
          subPath: install.properties
        - name: trino-tmp-data
          mountPath: /tmp
        resources:
          requests:
            memory: "2G"
            cpu: 2
        imagePullPolicy: Always
      volumes:
        - name: trino-cfg-vol
          configMap:
            name: trino-configs
        - name: trino-keystore-vol
          configMap:
            name: trino-keystore
  volumeClaimTemplates:
  - metadata:
      name: trino-tmp-data
    spec:
      storageClassName: default
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: trino-cli
spec:
  # host adicionado para que pudesse usar ingress para fazer autenticação no trino
  imagePullSecrets:
      - name: regcred
  containers:
  - name: trino-cli
    image: fabianoa/trino:426
    command: ["tail", "-f", "/dev/null"]
    imagePullPolicy: Always
  restartPolicy: Always
