apiVersion: v1
kind: Secret
metadata:
  name: nifi-creds
type: Opaque
stringData:
  password: 'admindatalake'
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-flow-pvc
spec:
  storageClassName: azurefile
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-content-pvc
spec:
  storageClassName: azurefile
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-flowfile-pvc
spec:
  storageClassName: azurefile
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-provenance-pvc
spec:
  storageClassName: azurefile
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-transient-zone-pvc
spec:
  storageClassName: azurefile
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---      
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nifi-deployment
spec:
  selector:
    matchLabels:
      app: nifi
  template:
    metadata:
      labels:
        app: nifi
    spec:
      containers:
      - name: nifi
        image: apache/nifi:1.20.0
        volumeMounts:
        - name: flow-xml
          mountPath: /opt/nifi/nifi-current/flow-repository
        - name: nifi-content-repository
          mountPath: /opt/nifi/nifi-current/content_repository
        - name: nifi-flowfile-repository
          mountPath: /opt/nifi/nifi-current/flowfile_repository
        - name: nifi-provenance-repository
          mountPath: /opt/nifi/nifi-current/provenance_repository
        - name: nifi-zona-transicao
          mountPath: /dados/zona_transicao
        - name: ldap-config
          mountPath: /opt/nifi/nifi-current/conf/login-identity-providers.xml
          subPath: login-identity-providers.xml
        - name: ldap-config
          mountPath: /opt/nifi/nifi-current/conf/authorizers.xml
          subPath: authorizers.xml
        command: ['/bin/bash', '-c']
        args:
        - set -x;
          sed -i -- "s~nifi.flow.configuration.file=.*~nifi.flow.configuration.file=./flow-repository/flow.xml.gz~" conf/nifi.properties;
          sed -i -- "s~nifi.security.user.login.identity.provider.*~nifi.security.user.login.identity.provider=ldap-provider~" conf/nifi.properties;
          sed -i -- "s~nifi.security.user.authorizer.*~nifi.security.user.authorizer=managed-authorizer~" conf/nifi.properties;
          sed -i -- "s~nifi.security.identity.mapping.value.dn.*~nifi.security.identity.mapping.value.dn=$1~" conf/nifi.properties;
          curl https://jdbc.postgresql.org/download/postgresql-42.6.0.jar  -o  /opt/nifi/nifi-current/lib/postgresql-42.6.0.jar;
          curl https://repo1.maven.org/maven2/io/trino/trino-jdbc/426/trino-jdbc-426.jar -o  /opt/nifi/nifi-current/lib/trino-jdbc-426.jar;
          ${NIFI_BASE_DIR}/scripts/start.sh
        ports:
        - containerPort: 8443
        env:
          - name: TZ
            value: America/Sao_Paulo
          - name: NIFI_SENSITIVE_PROPS_KEY
            value: "a67af951e0204d8df9945ca71fc19be6" 
      restartPolicy: Always
      volumes:
        - name: nifi-content-repository
          persistentVolumeClaim:
            claimName: nifi-content-pvc
        - name: nifi-flowfile-repository
          persistentVolumeClaim:
            claimName: nifi-flowfile-pvc
        - name: nifi-provenance-repository
          persistentVolumeClaim:
            claimName: nifi-provenance-pvc
        - name: nifi-zona-transicao
          persistentVolumeClaim:
            claimName: nifi-transient-zone-pvc
        - name: flow-xml
          persistentVolumeClaim:
            claimName: nifi-flow-pvc
        - name: ldap-config
          configMap:
            name: nifi-cfgfile
---
apiVersion: v1
kind: Service
metadata:
  name: nifi-svc
spec:
  type: LoadBalancer
  ports:
    - port: 8443
      targetPort: 8443
      protocol: TCP
  selector:
    app: nifi